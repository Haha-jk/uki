/* Generated by the Nim Compiler v2.2.2 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217747 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554444 = {size: 0,kind: 44,base: null,node: null,finalizer: null};
var NTI687866231 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI536870918 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI536870924 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI905969668 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI905969690 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI905969671 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI905969672 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI905969667 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI905969689 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI905969669 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI905969670 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI536872190 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555173 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217736 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI33555836 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555167 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555175 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555174 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555171 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555172 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
var NNI33555172 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555172.node = NNI33555172;
NTI33555174.base = NTI33555171;
NTI33555175.base = NTI33555171;
var NNI33555171 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555174, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555175, name: "up", sons: null}]};
NTI33555171.node = NNI33555171;
var NNI33555167 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555167.node = NNI33555167;
NTI33555171.base = NTI33555167;
NTI33555172.base = NTI33555171;
NTI134217741.base = NTI33555172;
NTI134217743.base = NTI134217741;
var NNI33555836 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554450, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554450, name: "Field2", sons: null}]};
NTI33555836.node = NNI33555836;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555172;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555172;
var NNI134217736 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217736.node = NNI134217736;
var NNI33555173 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555173.node = NNI33555173;
NTI33555173.base = NTI33555171;
NTI134217736.base = NTI33555173;
var NNI905969667 = {kind: 2, offset: 0, typ: null, name: null, len: 46, sons: {"0": {kind: 1, offset: 0, typ: NTI905969667, name: "Illegal", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI905969667, name: "EndOfFile", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI905969667, name: "NumericLiteral", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI905969667, name: "StringLiteral", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI905969667, name: "Identifier", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI905969667, name: "LeftRoundBracket", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI905969667, name: "RightRoundBracket", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI905969667, name: "LeftCurlyBracket", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI905969667, name: "RightCurlyBracket", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI905969667, name: "LeftSquareBracket", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI905969667, name: "RightSquareBracket", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI905969667, name: "Dot", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI905969667, name: "Comma", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI905969667, name: "Exclamation", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI905969667, name: "Ampersand", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI905969667, name: "Question", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI905969667, name: "Colon", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI905969667, name: "Equal", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI905969667, name: "LessThan", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI905969667, name: "MoreThan", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI905969667, name: "ExclamationEqual", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI905969667, name: "ExclamationLessThan", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI905969667, name: "ExclamationMoreThan", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI905969667, name: "Plus", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI905969667, name: "Minus", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI905969667, name: "Asterisk", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI905969667, name: "Slash", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI905969667, name: "Bar", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI905969667, name: "Tilde", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI905969667, name: "Hash", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI905969667, name: "Underscore", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI905969667, name: "UnderscoreLessThan", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI905969667, name: "NewLine", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI905969667, name: "Dollar", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI905969667, name: "WhenKeyword", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI905969667, name: "ThenKeyword", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI905969667, name: "TryKeyword", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI905969667, name: "FixKeyword", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI905969667, name: "LoopKeyword", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI905969667, name: "WithKeyword", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI905969667, name: "ImportKeyword", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI905969667, name: "ExportKeyword", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI905969667, name: "RightKeyword", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI905969667, name: "WrongKeyword", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI905969667, name: "Indent", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI905969667, name: "Dedent", len: 0, sons: null}}};
NTI905969667.node = NNI905969667;
var NNI905969689 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "tokenKind", len: 0, typ: NTI905969667, name: "tokenKind", sons: null}, 
{kind: 1, offset: "lexeme", len: 0, typ: NTI33554449, name: "lexeme", sons: null}, 
{kind: 1, offset: "line", len: 0, typ: NTI33554435, name: "line", sons: null}]};
NTI905969689.node = NNI905969689;
NTI905969669.base = NTI905969689;
NTI905969670.base = NTI905969669;
var NNI905969668 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI905969668, name: "Lexer", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI905969668, name: "Parser", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI905969668, name: "Validator", len: 0, sons: null}}};
NTI905969668.node = NNI905969668;
var NNI905969690 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "diagnosticKind", len: 0, typ: NTI905969668, name: "diagnosticKind", sons: null}, 
{kind: 1, offset: "errorMessage", len: 0, typ: NTI33554449, name: "errorMessage", sons: null}, 
{kind: 1, offset: "line", len: 0, typ: NTI33554435, name: "line", sons: null}]};
NTI905969690.node = NNI905969690;
NTI905969671.base = NTI905969690;
NTI905969672.base = NTI905969671;
NTI536870924.base = NTI536870918;
var NNI536872190 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "input0", len: 0, typ: NTI33554449, name: "input0", sons: null}, 
{kind: 1, offset: "index1", len: 0, typ: NTI33554435, name: "index1", sons: null}, 
{kind: 1, offset: "tokens2", len: 0, typ: NTI905969670, name: "tokens2", sons: null}, 
{kind: 1, offset: "line3", len: 0, typ: NTI33554435, name: "line3", sons: null}, 
{kind: 1, offset: "diagnostics4", len: 0, typ: NTI905969672, name: "diagnostics4", sons: null}, 
{kind: 1, offset: "indentStack5", len: 0, typ: NTI536870924, name: "indentStack5", sons: null}]};
NTI536872190.node = NNI536872190;
NTI536872190.base = NTI33555167;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
NTI134217742.base = NTI134217741;
var NNI687866231 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554444, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554444, name: "Field1", sons: null}]};
NTI687866231.node = NNI687866231;
var NNI134217747 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217747.node = NNI134217747;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
NTI134217746.base = NTI33555173;
NTI134217747.base = NTI134217746;

function toJSStr(s_p0) {
  var result_33556910 = null;

    var res_33556964 = newSeq__system_u2507((s_p0).length);
    var i_33556965 = 0;
    var j_33556966 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556965 < (s_p0).length)) break Label2;
          var c_33556967 = s_p0[i_33556965];
          if ((c_33556967 < 128)) {
          res_33556964[j_33556966] = String.fromCharCode(c_33556967);
          i_33556965 += 1;
          }
          else {
            var helper_33556993 = newSeq__system_u2507(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556994 = c_33556967.toString(16);
                  if ((((code_33556994) == null ? 0 : (code_33556994).length) == 1)) {
                  helper_33556993.push("%0");;
                  }
                  else {
                  helper_33556993.push("%");;
                  }
                  
                  helper_33556993.push(code_33556994);;
                  i_33556965 += 1;
                  if ((((s_p0).length <= i_33556965) || (s_p0[i_33556965] < 128))) {
                  break Label3;
                  }
                  
                  c_33556967 = s_p0[i_33556965];
                }
            };
++excHandler;
            try {
            res_33556964[j_33556966] = decodeURIComponent(helper_33556993.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556964[j_33556966] = helper_33556993.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556966 += 1;
        }
    };
    if (res_33556964.length < j_33556966) { for (var i = res_33556964.length ; i < j_33556966 ; ++i) res_33556964.push(null); }
               else { res_33556964.length = j_33556966; };
    result_33556910 = res_33556964.join("");

  return result_33556910;

}
    var FormatOpen_520094109 = ["rb", "wb", "w+b", "r+b", "ab"];

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_p0, src_p1, ti_p2) {
  var result_33557321 = null;

    switch (ti_p2.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer__system_u2869(ti_p2))) {
      result_33557321 = src_p1;
      }
      else {
        result_33557321 = [src_p1[0], src_p1[1]];
      }
      
      break;
    case 19:
            if (dest_p0 === null || dest_p0 === undefined) {
        dest_p0 = {};
      }
      else {
        for (var key in dest_p0) { delete dest_p0[key]; }
      }
      for (var key in src_p1) { dest_p0[key] = src_p1[key]; }
      result_33557321 = dest_p0;
    
      break;
    case 18:
    case 17:
      if (!((ti_p2.base == null))) {
      result_33557321 = nimCopy(dest_p0, src_p1, ti_p2.base);
      }
      else {
      if ((ti_p2.kind == 17)) {
      result_33557321 = (dest_p0 === null || dest_p0 === undefined) ? {m_type: ti_p2} : dest_p0;
      }
      else {
        result_33557321 = (dest_p0 === null || dest_p0 === undefined) ? {} : dest_p0;
      }
      }
      nimCopyAux(result_33557321, src_p1, ti_p2.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_p1)) { 
        if(dest_p0 === null || dest_p0 === undefined || dest_p0.length != src_p1.length) {
          dest_p0 = new src_p1.constructor(src_p1);
        } else {
          dest_p0.set(src_p1, 0);
        }
        result_33557321 = dest_p0;
      } else {
        if (src_p1 === null) {
          result_33557321 = null;
        }
        else {
          if (dest_p0 === null || dest_p0 === undefined || dest_p0.length != src_p1.length) {
            dest_p0 = new Array(src_p1.length);
          }
          result_33557321 = dest_p0;
          for (var i = 0; i < src_p1.length; ++i) {
            result_33557321[i] = nimCopy(result_33557321[i], src_p1[i], ti_p2.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_p1 === null) {
        result_33557321 = null;
      }
      else {
        if (dest_p0 === null || dest_p0 === undefined || dest_p0.length != src_p1.length) {
          dest_p0 = new Array(src_p1.length);
        }
        result_33557321 = dest_p0;
        for (var i = 0; i < src_p1.length; ++i) {
          result_33557321[i] = nimCopy(result_33557321[i], src_p1[i], ti_p2.base);
        }
      }
    
      break;
    case 28:
            if (src_p1 !== null) {
        result_33557321 = src_p1.slice(0);
      }
    
      break;
    default: 
      result_33557321 = src_p1;
      break;
    }

  return result_33557321;

}

function mnewString(len_p0) {
        var result = new Array(len_p0);
    for (var i = 0; i < len_p0; i++) {result[i] = 0;}
    return result;
  

  
}

function arrayConstr(len_p0, value_p1, typ_p2) {
        var result = new Array(len_p0);
    for (var i = 0; i < len_p0; ++i) result[i] = nimCopy(null, value_p1, typ_p2);
    return result;
  

  
}

function cstrToNimstr(c_p0) {
      var ln = c_p0.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_p0.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_p0.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function raiseException(e_p0, ename_p1) {
    e_p0.name = ename_p1;
    if ((excHandler == 0)) {
    unhandledException(e_p0);
    }
    
    e_p0.trace = nimCopy(null, rawWriteStackTrace__system_u2180(), NTI33554449);
    throw e_p0;

  
}

function addInt(a_p0, b_p1) {
        var result = a_p0 + b_p1;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_p0, a_p1, b_p2) {
  var result_33557361 = 0;

  BeforeRet: {
    if (((a_p1 <= i_p0) && (i_p0 <= b_p2))) {
    result_33557361 = i_p0;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557361;

}

function chckIndx(i_p0, a_p1, b_p2) {
  var result_33557356 = 0;

  BeforeRet: {
    if (((a_p1 <= i_p0) && (i_p0 <= b_p2))) {
    result_33557356 = i_p0;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_p0, a_p1, b_p2);
    }
    
  };

  return result_33557356;

}

function nimCharToStr(x_p0) {
  var result_33556448 = [];

    result_33556448 = nimCopy(null, mnewString(1), NTI33554449);
    result_33556448[0] = x_p0;

  return result_33556448;

}
var ConstSet2 = setConstr([48, 57]);

function addChar(x_p0, c_p1) {
    x_p0.push(c_p1);

  
}

function modInt(a_p0, b_p1) {
        if (b_p1 == 0) raiseDivByZero();
    if (b_p1 == -1 && a_p0 == 2147483647) raiseOverflow();
    return Math.trunc(a_p0 % b_p1);
  

  
}

function divInt(a_p0, b_p1) {
        if (b_p1 == 0) raiseDivByZero();
    if (b_p1 == -1 && a_p0 == 2147483647) raiseOverflow();
    return Math.trunc(a_p0 / b_p1);
  

  
}

function subInt(a_p0, b_p1) {
        var result = a_p0 - b_p1;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet3 = setConstr([97, 122]);

function mulInt(a_p0, b_p1) {
        var result = a_p0 * b_p1;
    checkOverflowInt(result);
    return result;
  

  
}

function eqStrings(a_p0, b_p1) {
        if (a_p0 == b_p1) return true;
    if (a_p0 === null && b_p1.length == 0) return true;
    if (b_p1 === null && a_p0.length == 0) return true;
    if ((!a_p0) || (!b_p1)) return false;
    var alen = a_p0.length;
    if (alen != b_p1.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_p0[i] != b_p1[i]) return false;
    return true;
  

  
}
      var keywords_536872289 = {data: [{Field0: 1910379680, Field1: [105,109,112,111,114,116], Field2: 40}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: (-338912312), Field1: [102,105,120], Field2: 37}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: (-1546435281), Field1: [101,120,112,111,114,116], Field2: 41}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: (-1553630541), Field1: [114,105,103,104,116], Field2: 42}, {Field0: (-1970838220), Field1: [119,104,101,110], Field2: 34}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 249640183, Field1: [116,114,121], Field2: 36}, {Field0: (-356875848), Field1: [119,114,111,110,103], Field2: 43}, {Field0: 739901209, Field1: [119,105,116,104], Field2: 39}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: (-1289805507), Field1: [116,104,101,110], Field2: 35}, {Field0: (-349520418), Field1: [108,111,111,112], Field2: 38}, {Field0: 0, Field1: [], Field2: 0}], counter: 10};

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}

function nimBoolToStr(x_p0) {
  var result_33556445 = [];

    if (x_p0) {
    result_33556445 = nimCopy(null, [116,114,117,101], NTI33554449);
    }
    else {
      result_33556445 = nimCopy(null, [102,97,108,115,101], NTI33554449);
    }
    

  return result_33556445;

}
var F = {procname: "module jsbigints", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsutils", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/std/private/jsutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsutils", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/std/private/jsutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
F.line = 219;
F.filename = "hashes.nim";
var objectID_687866034 = [0];
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module outparams", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/std/outparams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module outparams", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/std/outparams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "/data/data/com.termux/files/home/uki/code/compiler/types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "/data/data/com.termux/files/home/uki/code/compiler/types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
F.line = 45;
F.filename = "jsffi.nim";
F.line = 46;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsconsole", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/js/jsconsole.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsconsole", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/js/jsconsole.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function newSeq__system_u2507(len_p0) {
  var result_33556943 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 653;
    F.filename = "system.nim";
    result_33556943 = new Array(len_p0); for (var i = 0 ; i < len_p0 ; ++i) { result_33556943[i] = null; }  framePtr = F.prev;

  return result_33556943;

}

function isFatPointer__system_u2869(ti_p0) {
  var result_33557303 = false;

  BeforeRet: {
    result_33557303 = !((ConstSet1[ti_p0.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557303;

}

function nimCopyAux(dest_p0, src_p1, n_p2) {
    switch (n_p2.kind) {
    case 0:
      break;
    case 1:
            dest_p0[n_p2.offset] = nimCopy(dest_p0[n_p2.offset], src_p1[n_p2.offset], n_p2.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_p2.sons.length; i++) {
      nimCopyAux(dest_p0, src_p1, n_p2.sons[i]);
    }
    
      break;
    case 3:
            dest_p0[n_p2.offset] = nimCopy(dest_p0[n_p2.offset], src_p1[n_p2.offset], n_p2.typ);
      for (var i = 0; i < n_p2.sons.length; ++i) {
        nimCopyAux(dest_p0, src_p1, n_p2.sons[i][1]);
      }
    
      break;
    }

  
}

function add__system_u1942(x_p0, x_p0_Idx, y_p1) {
          if (x_p0[x_p0_Idx] === null) { x_p0[x_p0_Idx] = []; }
      var off = x_p0[x_p0_Idx].length;
      x_p0[x_p0_Idx].length += y_p1.length;
      for (var i = 0; i < y_p1.length; ++i) {
        x_p0[x_p0_Idx][off+i] = y_p1.charCodeAt(i);
      }
    

  
}

function auxWriteStackTrace__system_u2084(f_p0) {
  var result_33556518 = [[]];

    var it_33556526 = f_p0;
    var i_33556527 = 0;
    var total_33556528 = 0;
    var tempFrames_33556529 = arrayConstr(64, {Field0: null, Field1: 0, Field2: null}, NTI33555836);
    Label1: {
        Label2: while (true) {
        if (!(!((it_33556526 == null)) && (i_33556527 <= 63))) break Label2;
          tempFrames_33556529[i_33556527].Field0 = it_33556526.procname;
          tempFrames_33556529[i_33556527].Field1 = it_33556526.line;
          tempFrames_33556529[i_33556527].Field2 = it_33556526.filename;
          i_33556527 += 1;
          total_33556528 += 1;
          it_33556526 = it_33556526.prev;
        }
    };
    Label3: {
        Label4: while (true) {
        if (!!((it_33556526 == null))) break Label4;
          total_33556528 += 1;
          it_33556526 = it_33556526.prev;
        }
    };
    result_33556518[0] = nimCopy(null, [], NTI33554449);
    if (!((total_33556528 == i_33556527))) {
    result_33556518[0].push.apply(result_33556518[0], [40]);;
    result_33556518[0].push.apply(result_33556518[0], HEX24__systemZdollars_u8((total_33556528 - i_33556527)));;
    result_33556518[0].push.apply(result_33556518[0], [32,99,97,108,108,115,32,111,109,105,116,116,101,100,41,32,46,46,46,10]);;
    }
    
    Label5: {
      var j_33556562 = 0;
      var colontmp__536873019 = 0;
      colontmp__536873019 = (i_33556527 - 1);
      var res_536873021 = colontmp__536873019;
      Label6: {
          Label7: while (true) {
          if (!(0 <= res_536873021)) break Label7;
            j_33556562 = res_536873021;
            result_33556518[0].push.apply(result_33556518[0], cstrToNimstr(tempFrames_33556529[j_33556562].Field2));;
            if ((0 < tempFrames_33556529[j_33556562].Field1)) {
            result_33556518[0].push.apply(result_33556518[0], [40]);;
            addInt__stdZprivateZdigitsutils_u241(result_33556518, 0, tempFrames_33556529[j_33556562].Field1);
            if (false) {
            result_33556518[0].push.apply(result_33556518[0], [44,32]);;
            addInt__stdZprivateZdigitsutils_u241(result_33556518, 0, 0);
            }
            
            result_33556518[0].push.apply(result_33556518[0], [41]);;
            }
            
            result_33556518[0].push.apply(result_33556518[0], [32,97,116,32]);;
            add__system_u1942(result_33556518, 0, tempFrames_33556529[j_33556562].Field0);
            result_33556518[0].push.apply(result_33556518[0], [10]);;
            res_536873021 -= 1;
          }
      };
    };

  return result_33556518[0];

}

function rawWriteStackTrace__system_u2180() {
  var result_33556613 = [];

    if (!((framePtr == null))) {
    result_33556613 = nimCopy(null, ([84,114,97,99,101,98,97,99,107,32,40,109,111,115,116,32,114,101,99,101,110,116,32,99,97,108,108,32,108,97,115,116,41,10]).concat(auxWriteStackTrace__system_u2084(framePtr)), NTI33554449);
    }
    else {
      result_33556613 = nimCopy(null, [78,111,32,115,116,97,99,107,32,116,114,97,99,101,98,97,99,107,32,97,118,97,105,108,97,98,108,101,10], NTI33554449);
    }
    

  return result_33556613;

}

function unhandledException(e_p0) {
    var buf_33556658 = [[]];
    if (!(((e_p0.message).length == 0))) {
    buf_33556658[0].push.apply(buf_33556658[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556658[0].push.apply(buf_33556658[0], e_p0.message);;
    }
    else {
    buf_33556658[0].push.apply(buf_33556658[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556658[0].push.apply(buf_33556658[0], [32,91]);;
    add__system_u1942(buf_33556658, 0, e_p0.name);
    buf_33556658[0].push.apply(buf_33556658[0], [93,10]);;
    buf_33556658[0].push.apply(buf_33556658[0], rawWriteStackTrace__system_u2180());;
    var cbuf_33556659 = toJSStr(buf_33556658[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556659);
  }
  else {
    throw cbuf_33556659;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_p0) {
        if (a_p0 > 2147483647 || a_p0 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars__stdZprivateZdigitsutils_u202(result_p0, result_p0_Idx, x_p1, start_p2, n_p3) {
    var Temporary1;

  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 44;
    F.filename = "digitsutils.nim";
    var old_301990096 = (result_p0[result_p0_Idx]).length;
    F.line = 45;
    if (result_p0[result_p0_Idx].length < (Temporary1 = chckRange(addInt(old_301990096, n_p3), 0, 2147483647), Temporary1)) { for (var i = result_p0[result_p0_Idx].length; i < Temporary1; ++i) result_p0[result_p0_Idx].push(0); }
         else {result_p0[result_p0_Idx].length = Temporary1; };
    Label2: {
      F.line = 47;
      var iHEX60gensym4_301990110 = 0;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_536873014 = 0;
      Label3: {
        F.line = 129;
          Label4: while (true) {
          if (!(i_536873014 < n_p3)) break Label4;
            F.line = 50;
            F.filename = "digitsutils.nim";
            iHEX60gensym4_301990110 = i_536873014;
            F.line = 47;
            result_p0[result_p0_Idx][chckIndx(addInt(old_301990096, iHEX60gensym4_301990110), 0, (result_p0[result_p0_Idx]).length - 1)] = x_p1.charCodeAt(chckIndx(addInt(start_p2, iHEX60gensym4_301990110), 0, (x_p1).length - 1));
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_536873014 = addInt(i_536873014, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function addChars__stdZprivateZdigitsutils_u198(result_p0, result_p0_Idx, x_p1) {
  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 56;
    F.filename = "digitsutils.nim";
    addChars__stdZprivateZdigitsutils_u202(result_p0, result_p0_Idx, x_p1, 0, ((x_p1) == null ? 0 : (x_p1).length));
  framePtr = F.prev;

  
}

function addInt__stdZprivateZdigitsutils_u223(result_p0, result_p0_Idx, x_p1) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 112;
    F.filename = "digitsutils.nim";
    addChars__stdZprivateZdigitsutils_u198(result_p0, result_p0_Idx, ((x_p1) + ""));
  framePtr = F.prev;

  
}

function addInt__stdZprivateZdigitsutils_u241(result_p0, result_p0_Idx, x_p1) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 116;
    F.filename = "digitsutils.nim";
    addInt__stdZprivateZdigitsutils_u223(result_p0, result_p0_Idx, BigInt(x_p1));
  framePtr = F.prev;

  
}

function HEX24__systemZdollars_u8(x_p0) {
  var result_369098762 = [[]];

  var F = {procname: "dollars.$", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 19;
    F.filename = "dollars.nim";
    result_369098762[0] = nimCopy(null, [], NTI33554449);
    F.line = 20;
    addInt__stdZprivateZdigitsutils_u241(result_369098762, 0, x_p0);
  framePtr = F.prev;

  return result_369098762[0];

}

function raiseIndexError(i_p0, a_p1, b_p2) {
    var Temporary1;

    if ((b_p2 < a_p1)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32]).concat(HEX24__systemZdollars_u8(i_p0),[32,110,111,116,32,105,110,32],HEX24__systemZdollars_u8(a_p1),[32,46,46,32],HEX24__systemZdollars_u8(b_p2));
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function open__stdZsyncio_u414(f_p0, f_p0_Idx, filename_p1, mode_p2, bufSize_p3) {
    var Temporary1;

  var result_520094115 = false;

  var F = {procname: "syncio.open", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/std/syncio.nim", line: 0};
  framePtr = F;
    F.line = 718;
    F.filename = "syncio.nim";
    var p_520094116 = (Temporary1 = fopen(toJSStr(filename_p1), FormatOpen_520094109[chckIndx(mode_p2, 0, (FormatOpen_520094109).length - 1)]), Temporary1)[0], p_520094116_Idx = Temporary1[1];
    if (!((p_520094116 == null && p_520094116_Idx == 0))) {
    F.line = 720;
    var f2_520094117 = p_520094116;
    F.line = 735;
    result_520094115 = true;
    F.line = 736;
    f_p0[f_p0_Idx] = p_520094116;
    if (((0 < bufSize_p3) && ((bufSize_p3 >>> 0) <= 4294967295))) {
    F.line = 738;
    (setvbuf(f_p0[f_p0_Idx], null, 0, _IOFBF, Number(BigInt.asUintN(32, BigInt(bufSize_p3)))));
    }
    else {
    if ((bufSize_p3 == 0)) {
    F.line = 740;
    (setvbuf(f_p0[f_p0_Idx], null, 0, _IONBF, 0));
    }
    }
    }
    else {
      F.line = 742;
      result_520094115 = false;
    }
    
  framePtr = F.prev;

  return result_520094115;

}

function rawFileSize__stdZsyncio_u378(file_p0) {
  var result_520094076 = 0n;

  var F = {procname: "syncio.rawFileSize", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/std/syncio.nim", line: 0};
  framePtr = F;
    F.line = 572;
    F.filename = "syncio.nim";
    var oldPos_520094077 = ftello(file_p0);
    F.line = 573;
    (fseeko(file_p0, 0n, 2));
    F.line = 574;
    result_520094076 = ftello(file_p0);
    F.line = 575;
    (fseeko(file_p0, oldPos_520094077, 0));
  framePtr = F.prev;

  return result_520094076;

}

function raiseEIO__stdZsyncio_u85(msg_p0) {
  var F = {procname: "syncio.raiseEIO", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/std/syncio.nim", line: 0};
  framePtr = F;
    F.line = 157;
    F.filename = "syncio.nim";
    raiseException({message: nimCopy(null, msg_p0, NTI33554449), parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
  framePtr = F.prev;

  
}

function checkErr__stdZsyncio_u166(f_p0) {
  var F = {procname: "syncio.checkErr", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/std/syncio.nim", line: 0};
  framePtr = F;
    if (!((ferror(f_p0) == 0))) {
    F.line = 172;
    F.filename = "syncio.nim";
    var msg_520093864 = ([101,114,114,110,111,58,32]).concat(HEX24__systemZdollars_u8(((errno) | 0)),[32,96],cstrToNimstr(strerror(errno)),[96]);
    F.line = 173;
    clearerr(f_p0);
    F.line = 174;
    raiseEIO__stdZsyncio_u85(msg_520093864);
    }
    
  framePtr = F.prev;

  
}

function readBuffer__stdZsyncio_u169(f_p0, buffer_p1, buffer_p1_Idx, len_p2) {
  var result_520093869 = 0;

    result_520093869 = Number(BigInt.asIntN(32, BigInt(fread(buffer_p1, buffer_p1_Idx, 1, Number(BigInt.asUintN(32, BigInt(len_p2))), f_p0))));
    if (!((result_520093869 == len_p2))) {
    checkErr__stdZsyncio_u166(f_p0);
    }
    

  return result_520093869;

}

function endOfFile__stdZsyncio_u382(f_p0) {
  var result_520094080 = false;

  var F = {procname: "syncio.endOfFile", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/std/syncio.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 579;
    F.filename = "syncio.nim";
    var c_520094081 = fgetc(f_p0);
    F.line = 580;
    (ungetc(c_520094081, f_p0));
    F.line = 581;
    result_520094080 = (c_520094081 < 0);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520094080;

}

function readAllBuffer__stdZsyncio_u373(file_p0) {
  var result_520094071 = [];

  var F = {procname: "syncio.readAllBuffer", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/std/syncio.nim", line: 0};
  framePtr = F;
    F.line = 559;
    F.filename = "syncio.nim";
    result_520094071 = nimCopy(null, [], NTI33554449);
    F.line = 560;
    var buffer_520094072 = mnewString(4000);
    Label1: {
      F.line = 561;
        Label2: while (true) {
        if (!true) break Label2;
          F.line = 562;
          var bytesRead_520094073 = readBuffer__stdZsyncio_u169(file_p0, buffer_520094072, chckIndx(0, 0, (buffer_520094072).length - 1), 4000);
          if ((bytesRead_520094073 == 4000)) {
          F.line = 564;
          result_520094071.push.apply(result_520094071, buffer_520094072);;
          }
          else {
            F.line = 566;
            if (buffer_520094072.length < chckRange(bytesRead_520094073, 0, 2147483647)) { for (var i = buffer_520094072.length; i < chckRange(bytesRead_520094073, 0, 2147483647); ++i) buffer_520094072.push(0); }
         else {buffer_520094072.length = chckRange(bytesRead_520094073, 0, 2147483647); };
            F.line = 567;
            result_520094071.push.apply(result_520094071, buffer_520094072);;
            F.line = 568;
            break Label1;
          }
          
        }
    };
  framePtr = F.prev;

  return result_520094071;

}

function readAllFile__stdZsyncio_u386(file_p0, len_p1) {
  var result_520094085 = [];

  var F = {procname: "syncio.readAllFile", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/std/syncio.nim", line: 0};
  framePtr = F;
    F.line = 587;
    F.filename = "syncio.nim";
    result_520094085 = nimCopy(null, mnewString(chckRange(Number(len_p1), 0, 2147483647)), NTI33554449);
    F.line = 588;
    var bytes_520094086 = readBuffer__stdZsyncio_u169(file_p0, result_520094085, chckIndx(0, 0, (result_520094085).length - 1), chckRange(Number(len_p1), 0, 2147483647));
    if (endOfFile__stdZsyncio_u382(file_p0)) {
    if ((BigInt(bytes_520094086) < len_p1)) {
    F.line = 591;
    if (result_520094085.length < chckRange(bytes_520094086, 0, 2147483647)) { for (var i = result_520094085.length; i < chckRange(bytes_520094086, 0, 2147483647); ++i) result_520094085.push(0); }
         else {result_520094085.length = chckRange(bytes_520094086, 0, 2147483647); };
    }
    
    }
    else {
      F.line = 595;
    result_520094085.push.apply(result_520094085, readAllBuffer__stdZsyncio_u373(file_p0));;
    }
    
  framePtr = F.prev;

  return result_520094085;

}

function readAll__stdZsyncio_u395(file_p0) {
  var result_520094093 = [];

  var F = {procname: "syncio.readAll", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/std/syncio.nim", line: 0};
  framePtr = F;
    F.line = 612;
    F.filename = "syncio.nim";
    var len_520094094 = rawFileSize__stdZsyncio_u378(file_p0);
    if ((0n < len_520094094)) {
    F.line = 614;
    result_520094093 = nimCopy(null, readAllFile__stdZsyncio_u386(file_p0, len_520094094), NTI33554449);
    }
    else {
      F.line = 616;
      result_520094093 = nimCopy(null, readAllBuffer__stdZsyncio_u373(file_p0), NTI33554449);
    }
    
  framePtr = F.prev;

  return result_520094093;

}

function close__stdZsyncio_u261(f_p0) {
  var F = {procname: "syncio.close", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/std/syncio.nim", line: 0};
  framePtr = F;
    if (!((f_p0 == null))) {
    F.line = 328;
    F.filename = "syncio.nim";
    (fclose(f_p0));
    }
    
  framePtr = F.prev;

  
}

function readFile__stdZsyncio_u499(filename_p0) {
  var result_520094197 = [];

  var F = {procname: "syncio.readFile", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/std/syncio.nim", line: 0};
  framePtr = F;
    F.line = 869;
    F.filename = "syncio.nim";
    var f_520094198 = [null];
    if (open__stdZsyncio_u414(f_520094198, 0, filename_p0, 0, (-1))) {
    F.line = 871;
    try {
    F.line = 872;
    result_520094197 = nimCopy(null, readAll__stdZsyncio_u395(f_520094198[0]), NTI33554449);
    } finally {
    framePtr = F;
    F.line = 874;
    close__stdZsyncio_u261(f_520094198[0]);
    }
    }
    else {
      F.line = 876;
      raiseException({message: ([99,97,110,110,111,116,32,111,112,101,110,58,32]).concat(filename_p0), parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
  framePtr = F.prev;

  return result_520094197;

}

function isAtEnd__lexer_u1475() {
  var result_536872388 = false;

  var F = {procname: "lexer.isAtEnd", prev: framePtr, filename: "/data/data/com.termux/files/home/uki/code/compiler/lexer.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 37;
    F.filename = "lexer.nim";
    result_536872388 = ((this.input0).length <= this.index1);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_536872388;

}

function addToken__lexer_u1378(tokenKind_p0, lexeme_p1) {
  var F = {procname: "lexer.addToken", prev: framePtr, filename: "/data/data/com.termux/files/home/uki/code/compiler/lexer.nim", line: 0};
  framePtr = F;
    F.line = 31;
    F.filename = "lexer.nim";
    this.tokens2.push({tokenKind: tokenKind_p0, lexeme: nimCopy(null, lexeme_p1, NTI33554449), line: this.line3});;
  framePtr = F.prev;

  
}

function isDigit__lexer_u1477(character_p0) {
  var result_536872391 = false;

  var F = {procname: "lexer.isDigit", prev: framePtr, filename: "/data/data/com.termux/files/home/uki/code/compiler/lexer.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 40;
    F.filename = "lexer.nim";
    result_536872391 = (ConstSet2[character_p0] != undefined);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_536872391;

}

function number__lexer_u1724(isNegative_p0) {
    var Temporary1;
          var Temporary4;
          var Temporary5;
    var Temporary6;

  var F = {procname: "lexer.number", prev: framePtr, filename: "/data/data/com.termux/files/home/uki/code/compiler/lexer.nim", line: 0};
  framePtr = F;
    F.line = 84;
    F.filename = "lexer.nim";
    if (isNegative_p0) {
    Temporary1 = [45];
    }
    else {
    Temporary1 = [];
    }
    
    var accumulate_536872638 = nimCopy(null, Temporary1, NTI33554449);
    Label2: {
      F.line = 85;
        Label3: while (true) {
          Temporary5 = isAtEnd__lexer_u1475.bind(this); Temporary5.ClP_0 = isAtEnd__lexer_u1475; Temporary5.ClE_0 = this;
          if (!!(Temporary5())) Temporary4 = false; else {            Temporary4 = isDigit__lexer_u1477(this.input0[chckIndx(this.index1, 0, (this.input0).length - 1)]);          }        if (!Temporary4) break Label3;
          F.line = 86;
          addChar(accumulate_536872638, this.input0[chckIndx(this.index1, 0, (this.input0).length - 1)]);;
          F.line = 87;
          this.index1 = addInt(this.index1, 1);
        }
    };
    F.line = 88;
    Temporary6 = addToken__lexer_u1378.bind(this); Temporary6.ClP_0 = addToken__lexer_u1378; Temporary6.ClE_0 = this;
    Temporary6(2, accumulate_536872638);
  framePtr = F.prev;

  
}

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function addDiagnostic__lexer_u1419(errorMessage_p0) {
  var F = {procname: "lexer.addDiagnostic", prev: framePtr, filename: "/data/data/com.termux/files/home/uki/code/compiler/lexer.nim", line: 0};
  framePtr = F;
    F.line = 34;
    F.filename = "lexer.nim";
    this.diagnostics4.push({diagnosticKind: 0, errorMessage: nimCopy(null, errorMessage_p0, NTI33554449), line: this.line3});;
  framePtr = F.prev;

  
}

function HEX5BHEX5D__lexer_u1745(s_p0, i_p1) {
  var result_536872661 = null;
  var result_536872661_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "indices.nim";
    result_536872661 = s_p0; result_536872661_Idx = chckIndx(subInt((s_p0).length, i_p1), 0, (s_p0).length - 1);
  framePtr = F.prev;

  return [result_536872661, result_536872661_Idx];

}

function handleIndentation__lexer_u1732() {
          var Temporary3;
          var Temporary4;
      var Temporary5;
      var Temporary6;
    var Temporary7;
    var Temporary8;
    var Temporary9;
    var Temporary10;
          var Temporary13;
          var Temporary14;
          var Temporary15;
      var Temporary16;
    var Temporary17;
    var Temporary18;

  var F = {procname: "lexer.handleIndentation", prev: framePtr, filename: "/data/data/com.termux/files/home/uki/code/compiler/lexer.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 91;
    F.filename = "lexer.nim";
    var spaceCount_536872645 = 0;
    Label1: {
      F.line = 94;
        Label2: while (true) {
          Temporary4 = isAtEnd__lexer_u1475.bind(this); Temporary4.ClP_0 = isAtEnd__lexer_u1475; Temporary4.ClE_0 = this;
          if (!!(Temporary4())) Temporary3 = false; else {            Temporary3 = (this.input0[chckIndx(this.index1, 0, (this.input0).length - 1)] == 32);          }        if (!Temporary3) break Label2;
          F.line = 95;
          spaceCount_536872645 = addInt(spaceCount_536872645, 1);
          F.line = 96;
          this.index1 = addInt(this.index1, 1);
        }
    };
      Temporary6 = isAtEnd__lexer_u1475.bind(this); Temporary6.ClP_0 = isAtEnd__lexer_u1475; Temporary6.ClE_0 = this;
      if (Temporary6()) Temporary5 = true; else {        Temporary5 = (this.input0[chckIndx(this.index1, 0, (this.input0).length - 1)] == 10);      }    if (Temporary5) {
    F.line = 100;
    break BeforeRet;
    }
    
    if (!((modInt(spaceCount_536872645, 4) == 0))) {
    F.line = 104;
    Temporary7 = addDiagnostic__lexer_u1419.bind(this); Temporary7.ClP_0 = addDiagnostic__lexer_u1419; Temporary7.ClE_0 = this;
    Temporary7([73,110,100,101,110,116,97,116,105,111,110,32,109,117,115,116,32,98,101,32,97,32,109,117,108,116,105,112,108,101,32,111,102,32,52,32,115,112,97,99,101,115]);
    F.line = 105;
    break BeforeRet;
    }
    
    F.line = 107;
    var indentLevel_536872656 = divInt(spaceCount_536872645, 4);
    F.line = 108;
    var currentIndentLevel_536872681 = (Temporary8 = HEX5BHEX5D__lexer_u1745(this.indentStack5, 1), Temporary8)[0][Temporary8[1]];
    if ((currentIndentLevel_536872681 < indentLevel_536872656)) {
    if (!((indentLevel_536872656 == addInt(currentIndentLevel_536872681, 1)))) {
    F.line = 113;
    Temporary9 = addDiagnostic__lexer_u1419.bind(this); Temporary9.ClP_0 = addDiagnostic__lexer_u1419; Temporary9.ClE_0 = this;
    Temporary9(([85,110,101,120,112,101,99,116,101,100,32,105,110,100,101,110,116,32,108,101,118,101,108,58,32,101,120,112,101,99,116,101,100,32]).concat(HEX24__systemZdollars_u8(addInt(currentIndentLevel_536872681, 1)),[32,98,117,116,32,103,111,116,32],HEX24__systemZdollars_u8(indentLevel_536872656)));
    F.line = 115;
    break BeforeRet;
    }
    
    F.line = 116;
    this.indentStack5.push(indentLevel_536872656);;
    F.line = 117;
    Temporary10 = addToken__lexer_u1378.bind(this); Temporary10.ClP_0 = addToken__lexer_u1378; Temporary10.ClE_0 = this;
    Temporary10(44, []);
    }
    else {
    if ((indentLevel_536872656 < currentIndentLevel_536872681)) {
    Label11: {
      F.line = 121;
        Label12: while (true) {
        if (!((0 < (this.indentStack5).length) && (indentLevel_536872656 < (Temporary13 = HEX5BHEX5D__lexer_u1745(this.indentStack5, 1), Temporary13)[0][Temporary13[1]]))) break Label12;
          F.line = 122;
          if (this.indentStack5.length < (Temporary14 = chckRange(subInt((this.indentStack5).length, 1), 0, 2147483647), Temporary14)) { for (var i = this.indentStack5.length ; i < Temporary14 ; ++i) this.indentStack5.push(0); }
               else { this.indentStack5.length = Temporary14; };
          F.line = 123;
          Temporary15 = addToken__lexer_u1378.bind(this); Temporary15.ClP_0 = addToken__lexer_u1378; Temporary15.ClE_0 = this;
          Temporary15(45, []);
        }
    };
    if ((((this.indentStack5).length == 0) || !(((Temporary16 = HEX5BHEX5D__lexer_u1745(this.indentStack5, 1), Temporary16)[0][Temporary16[1]] == indentLevel_536872656)))) {
    F.line = 126;
    Temporary17 = addDiagnostic__lexer_u1419.bind(this); Temporary17.ClP_0 = addDiagnostic__lexer_u1419; Temporary17.ClE_0 = this;
    Temporary17(([73,110,99,111,110,115,105,115,116,101,110,116,32,100,101,100,101,110,116,58,32,101,120,112,101,99,116,101,100,32,105,110,100,101,110,116,32,108,101,118,101,108,32]).concat(HEX24__systemZdollars_u8((Temporary18 = HEX5BHEX5D__lexer_u1745(this.indentStack5, 1), Temporary18)[0][Temporary18[1]]),[32,98,117,116,32,103,111,116,32],HEX24__systemZdollars_u8(indentLevel_536872656)));
    }
    
    }
    }
  };
  framePtr = F.prev;

  
}

function string__lexer_u1494() {
            var Temporary3;
          var Temporary4;
    var Temporary5;

  var F = {procname: "lexer.string", prev: framePtr, filename: "/data/data/com.termux/files/home/uki/code/compiler/lexer.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 51;
    F.filename = "lexer.nim";
    this.index1 = addInt(this.index1, 1);
    F.line = 52;
    var accumulate_536872412 = [];
    Label1: {
      F.line = 53;
        Label2: while (true) {
        if (!true) break Label2;
            Temporary3 = isAtEnd__lexer_u1475.bind(this); Temporary3.ClP_0 = isAtEnd__lexer_u1475; Temporary3.ClE_0 = this;
          if (Temporary3()) {
          F.line = 55;
          Temporary4 = addDiagnostic__lexer_u1419.bind(this); Temporary4.ClP_0 = addDiagnostic__lexer_u1419; Temporary4.ClE_0 = this;
          Temporary4([85,110,116,101,114,109,105,110,97,116,101,100,32,115,116,114,105,110,103,32,108,105,116,101,114,97,108]);
          F.line = 56;
          break BeforeRet;
          }
          
          if ((this.input0[chckIndx(this.index1, 0, (this.input0).length - 1)] == 34)) {
          F.line = 59;
          break Label1;
          }
          else {
          if ((this.input0[chckIndx(this.index1, 0, (this.input0).length - 1)] == 10)) {
          F.line = 61;
          this.line3 = addInt(this.line3, 1);
          }
          }
          F.line = 63;
          addChar(accumulate_536872412, this.input0[chckIndx(this.index1, 0, (this.input0).length - 1)]);;
          F.line = 64;
          this.index1 = addInt(this.index1, 1);
        }
    };
    F.line = 67;
    this.index1 = addInt(this.index1, 1);
    F.line = 68;
    Temporary5 = addToken__lexer_u1378.bind(this); Temporary5.ClP_0 = addToken__lexer_u1378; Temporary5.ClE_0 = this;
    Temporary5(3, accumulate_536872412);
  };
  framePtr = F.prev;

  
}

function isAlphabet__lexer_u1484(character_p0) {
  var result_536872398 = false;

  var F = {procname: "lexer.isAlphabet", prev: framePtr, filename: "/data/data/com.termux/files/home/uki/code/compiler/lexer.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 43;
    F.filename = "lexer.nim";
    result_536872398 = (ConstSet3[character_p0] != undefined);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_536872398;

}

function isAlphaNumeric__lexer_u1491(character_p0) {
  var result_536872405 = false;

  var F = {procname: "lexer.isAlphaNumeric", prev: framePtr, filename: "/data/data/com.termux/files/home/uki/code/compiler/lexer.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 46;
    F.filename = "lexer.nim";
    result_536872405 = ((isAlphabet__lexer_u1484(character_p0) || isDigit__lexer_u1477(character_p0)) || (character_p0 == 45));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_536872405;

}

function lenU__pureZhashes_u532(s_p0) {
  var result_687866390 = 0n;

  var F = {procname: "hashes.lenU", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 413;
    F.filename = "hashes.nim";
    result_687866390 = BigInt.asUintN(64, BigInt((s_p0).length));
  framePtr = F.prev;

  return result_687866390;

}

function load8e__pureZhashes_u492(s_p0, o_p1) {
  var result_687866351 = 0n;

  var F = {procname: "hashes.load8e", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 395;
    F.filename = "hashes.nim";
    result_687866351 = (((((((BigInt.asUintN(64, BigInt(s_p0[chckIndx(addInt(o_p1, 7), 0, (s_p0).length - 1)]) << BigInt(56)) | BigInt.asUintN(64, BigInt(s_p0[chckIndx(addInt(o_p1, 6), 0, (s_p0).length - 1)]) << BigInt(48))) | BigInt.asUintN(64, BigInt(s_p0[chckIndx(addInt(o_p1, 5), 0, (s_p0).length - 1)]) << BigInt(40))) | BigInt.asUintN(64, BigInt(s_p0[chckIndx(addInt(o_p1, 4), 0, (s_p0).length - 1)]) << BigInt(32))) | BigInt.asUintN(64, BigInt(s_p0[chckIndx(addInt(o_p1, 3), 0, (s_p0).length - 1)]) << BigInt(24))) | BigInt.asUintN(64, BigInt(s_p0[chckIndx(addInt(o_p1, 2), 0, (s_p0).length - 1)]) << BigInt(16))) | BigInt.asUintN(64, BigInt(s_p0[chckIndx(addInt(o_p1, 1), 0, (s_p0).length - 1)]) << BigInt(8))) | BigInt(s_p0[chckIndx(addInt(o_p1, 0), 0, (s_p0).length - 1)]));
  framePtr = F.prev;

  return result_687866351;

}

function load8__pureZhashes_u528(s_p0, o_p1) {
  var result_687866387 = 0n;

  var F = {procname: "hashes.load8", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 411;
    F.filename = "hashes.nim";
    result_687866387 = load8e__pureZhashes_u492(s_p0, o_p1);
  framePtr = F.prev;

  return result_687866387;

}

function rotR__pureZhashes_u545(v_p0, bits_p1) {
  var result_687866404 = 0n;

  var F = {procname: "hashes.rotR", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 418;
    F.filename = "hashes.nim";
    result_687866404 = ((v_p0 >> BigInt(bits_p1)) | BigInt.asUintN(64, v_p0 << BigInt(subInt(64, bits_p1))));
  framePtr = F.prev;

  return result_687866404;

}

function len16__pureZhashes_u557(u_p0, v_p1, mul_p2) {
  var result_687866417 = 0n;

  var F = {procname: "hashes.len16", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 421;
    F.filename = "hashes.nim";
    F.line = 421;
    var a_687866418 = BigInt.asUintN(64, ((u_p0 ^ v_p1) * mul_p2));
    F.line = 422;
    a_687866418 = (a_687866418 ^ (a_687866418 >> BigInt(47)));
    F.line = 423;
    var b_687866423 = BigInt.asUintN(64, ((v_p1 ^ a_687866418) * mul_p2));
    F.line = 424;
    b_687866423 = (b_687866423 ^ (b_687866423 >> BigInt(47)));
    result_687866417 = BigInt.asUintN(64, (b_687866423 * mul_p2));
  framePtr = F.prev;

  return result_687866417;

}

function load4e__pureZhashes_u476(s_p0, o_p1) {
  var result_687866335 = 0;

  var F = {procname: "hashes.load4e", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 389;
    F.filename = "hashes.nim";
    result_687866335 = (((((((((s_p0[chckIndx(addInt(o_p1, 3), 0, (s_p0).length - 1)] >>> 0) << 24) >>> 0) | (((s_p0[chckIndx(addInt(o_p1, 2), 0, (s_p0).length - 1)] >>> 0) << 16) >>> 0)) >>> 0) | (((s_p0[chckIndx(addInt(o_p1, 1), 0, (s_p0).length - 1)] >>> 0) << 8) >>> 0)) >>> 0) | (s_p0[chckIndx(addInt(o_p1, 0), 0, (s_p0).length - 1)] >>> 0)) >>> 0);
  framePtr = F.prev;

  return result_687866335;

}

function load4__pureZhashes_u524(s_p0, o_p1) {
  var result_687866383 = 0;

  var F = {procname: "hashes.load4", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 403;
    F.filename = "hashes.nim";
    result_687866383 = load4e__pureZhashes_u476(s_p0, o_p1);
  framePtr = F.prev;

  return result_687866383;

}

function shiftMix__pureZhashes_u538(v_p0) {
  var result_687866396 = 0n;

  var F = {procname: "hashes.shiftMix", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 415;
    F.filename = "hashes.nim";
    result_687866396 = (v_p0 ^ (v_p0 >> BigInt(47)));
  framePtr = F.prev;

  return result_687866396;

}

function len0_16__pureZhashes_u572(s_p0) {
    var Temporary1;

  var result_687866430 = 0n;

  var F = {procname: "hashes.len0_16", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 428;
    F.filename = "hashes.nim";
    if ((8 <= (s_p0).length)) {
    F.line = 429;
    var mul_687866434 = BigInt.asUintN(64, (11160318154034397263n + BigInt.asUintN(64, (2n * lenU__pureZhashes_u532(s_p0)))));
    F.line = 430;
    var a_687866435 = BigInt.asUintN(64, (load8__pureZhashes_u528(s_p0, 0) + 11160318154034397263n));
    F.line = 431;
    var b_687866439 = load8__pureZhashes_u528(s_p0, subInt((s_p0).length, 8));
    F.line = 432;
    var c_687866440 = BigInt.asUintN(64, (BigInt.asUintN(64, (rotR__pureZhashes_u545(b_687866439, 37) * mul_687866434)) + a_687866435));
    F.line = 433;
    var d_687866441 = BigInt.asUintN(64, (BigInt.asUintN(64, (rotR__pureZhashes_u545(a_687866435, 25) + b_687866439)) * mul_687866434));
    Temporary1 = len16__pureZhashes_u557(c_687866440, d_687866441, mul_687866434);
    }
    else {
    if ((4 <= (s_p0).length)) {
    F.line = 436;
    var mul_687866445 = BigInt.asUintN(64, (11160318154034397263n + BigInt.asUintN(64, (2n * lenU__pureZhashes_u532(s_p0)))));
    F.line = 437;
    var a_687866446 = BigInt(load4__pureZhashes_u524(s_p0, 0));
    Temporary1 = len16__pureZhashes_u557(BigInt.asUintN(64, (lenU__pureZhashes_u532(s_p0) + BigInt.asUintN(64, a_687866446 << BigInt(3)))), BigInt(load4__pureZhashes_u524(s_p0, subInt((s_p0).length, 4))), mul_687866445);
    }
    else {
    if ((0 < (s_p0).length)) {
    F.line = 440;
    var a_687866457 = (s_p0[chckIndx(0, 0, (s_p0).length - 1)] >>> 0);
    F.line = 441;
    var b_687866465 = (s_p0[chckIndx(((s_p0).length >> 1), 0, (s_p0).length - 1)] >>> 0);
    F.line = 442;
    var c_687866469 = (s_p0[chckIndx(subInt((s_p0).length, 1), 0, (s_p0).length - 1)] >>> 0);
    F.line = 443;
    var y_687866474 = ((a_687866457 + ((b_687866465 << 8) >>> 0)) >>> 0);
    F.line = 444;
    var z_687866479 = BigInt.asUintN(64, (lenU__pureZhashes_u532(s_p0) + BigInt(((c_687866469 << 2) >>> 0))));
    Temporary1 = BigInt.asUintN(64, (shiftMix__pureZhashes_u538((BigInt.asUintN(64, (BigInt(y_687866474) * 11160318154034397263n)) ^ BigInt.asUintN(64, (z_687866479 * 14097894508562428199n)))) * 11160318154034397263n));
    }
    else {
    Temporary1 = 11160318154034397263n;
    }
    }}
    result_687866430 = Temporary1;
  framePtr = F.prev;

  return result_687866430;

}

function len17_32__pureZhashes_u624(s_p0) {
  var result_687866482 = 0n;

  var F = {procname: "hashes.len17_32", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 449;
    F.filename = "hashes.nim";
    F.line = 449;
    var mul_687866483 = BigInt.asUintN(64, (11160318154034397263n + BigInt.asUintN(64, (2n * lenU__pureZhashes_u532(s_p0)))));
    F.line = 450;
    var a_687866484 = BigInt.asUintN(64, (load8__pureZhashes_u528(s_p0, 0) * 13011662864482103923n));
    F.line = 451;
    var b_687866485 = load8__pureZhashes_u528(s_p0, 8);
    F.line = 452;
    var c_687866489 = BigInt.asUintN(64, (load8__pureZhashes_u528(s_p0, subInt((s_p0).length, 8)) * mul_687866483));
    F.line = 453;
    var d_687866493 = BigInt.asUintN(64, (load8__pureZhashes_u528(s_p0, subInt((s_p0).length, 16)) * 11160318154034397263n));
    result_687866482 = len16__pureZhashes_u557(BigInt.asUintN(64, (BigInt.asUintN(64, (rotR__pureZhashes_u545(BigInt.asUintN(64, (a_687866484 + b_687866485)), 43) + rotR__pureZhashes_u545(c_687866489, 30))) + d_687866493)), BigInt.asUintN(64, (BigInt.asUintN(64, (a_687866484 + rotR__pureZhashes_u545(BigInt.asUintN(64, (b_687866485 + 11160318154034397263n)), 18))) + c_687866489)), mul_687866483);
  framePtr = F.prev;

  return result_687866482;

}

function len33_64__pureZhashes_u638(s_p0) {
  var result_687866496 = 0n;

  var F = {procname: "hashes.len33_64", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 457;
    F.filename = "hashes.nim";
    F.line = 457;
    var mul_687866497 = BigInt.asUintN(64, (11160318154034397263n + BigInt.asUintN(64, (2n * lenU__pureZhashes_u532(s_p0)))));
    F.line = 458;
    var a_687866498 = BigInt.asUintN(64, (load8__pureZhashes_u528(s_p0, 0) * 11160318154034397263n));
    F.line = 459;
    var b_687866499 = load8__pureZhashes_u528(s_p0, 8);
    F.line = 460;
    var c_687866503 = BigInt.asUintN(64, (load8__pureZhashes_u528(s_p0, subInt((s_p0).length, 8)) * mul_687866497));
    F.line = 461;
    var d_687866507 = BigInt.asUintN(64, (load8__pureZhashes_u528(s_p0, subInt((s_p0).length, 16)) * 11160318154034397263n));
    F.line = 462;
    var y_687866508 = BigInt.asUintN(64, (BigInt.asUintN(64, (rotR__pureZhashes_u545(BigInt.asUintN(64, (a_687866498 + b_687866499)), 43) + rotR__pureZhashes_u545(c_687866503, 30))) + d_687866507));
    F.line = 463;
    var z_687866509 = len16__pureZhashes_u557(y_687866508, BigInt.asUintN(64, (BigInt.asUintN(64, (a_687866498 + rotR__pureZhashes_u545(BigInt.asUintN(64, (b_687866499 + 11160318154034397263n)), 18))) + c_687866503)), mul_687866497);
    F.line = 464;
    var e_687866510 = BigInt.asUintN(64, (load8__pureZhashes_u528(s_p0, 16) * mul_687866497));
    F.line = 465;
    var f_687866511 = load8__pureZhashes_u528(s_p0, 24);
    F.line = 466;
    var g_687866515 = BigInt.asUintN(64, (BigInt.asUintN(64, (y_687866508 + load8__pureZhashes_u528(s_p0, subInt((s_p0).length, 32)))) * mul_687866497));
    F.line = 467;
    var h_687866519 = BigInt.asUintN(64, (BigInt.asUintN(64, (z_687866509 + load8__pureZhashes_u528(s_p0, subInt((s_p0).length, 24)))) * mul_687866497));
    result_687866496 = len16__pureZhashes_u557(BigInt.asUintN(64, (BigInt.asUintN(64, (rotR__pureZhashes_u545(BigInt.asUintN(64, (e_687866510 + f_687866511)), 43) + rotR__pureZhashes_u545(g_687866515, 30))) + h_687866519)), BigInt.asUintN(64, (BigInt.asUintN(64, (e_687866510 + rotR__pureZhashes_u545(BigInt.asUintN(64, (f_687866511 + a_687866498)), 18))) + g_687866515)), mul_687866497);
  framePtr = F.prev;

  return result_687866496;

}

function weakLen32withSeeds2__pureZhashes_u669(w_p0, x_p1, y_p2, z_p3, a_p4, b_p5) {
  var result_687866532 = {Field0: 0n, Field1: 0n};

  var F = {procname: "hashes.weakLen32withSeeds2", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 473;
    F.filename = "hashes.nim";
    var a_687866533 = BigInt.asUintN(64, (a_p4 + w_p0));
    F.line = 474;
    var b_687866534 = rotR__pureZhashes_u545(BigInt.asUintN(64, (BigInt.asUintN(64, (b_p5 + a_687866533)) + z_p3)), 21);
    F.line = 475;
    var c_687866535 = a_687866533;
    F.line = 476;
    a_687866533 = BigInt.asUintN(64, a_687866533 + BigInt(x_p1));
    F.line = 477;
    a_687866533 = BigInt.asUintN(64, a_687866533 + BigInt(y_p2));
    F.line = 478;
    b_687866534 = BigInt.asUintN(64, b_687866534 + BigInt(rotR__pureZhashes_u545(a_687866533, 44)));
    F.line = 479;
    result_687866532["Field0"] = BigInt.asUintN(64, (a_687866533 + z_p3));
    F.line = 480;
    result_687866532["Field1"] = BigInt.asUintN(64, (b_687866534 + c_687866535));
  framePtr = F.prev;

  return result_687866532;

}

function weakLen32withSeeds__pureZhashes_u692(s_p0, o_p1, a_p2, b_p3) {
  var result_687866553 = {Field0: 0n, Field1: 0n};

  var F = {procname: "hashes.weakLen32withSeeds", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 483;
    F.filename = "hashes.nim";
    result_687866553 = nimCopy(result_687866553, weakLen32withSeeds2__pureZhashes_u669(load8__pureZhashes_u528(s_p0, o_p1), load8__pureZhashes_u528(s_p0, addInt(o_p1, 8)), load8__pureZhashes_u528(s_p0, addInt(o_p1, 16)), load8__pureZhashes_u528(s_p0, addInt(o_p1, 24)), a_p2, b_p3), NTI687866231);
  framePtr = F.prev;

  return result_687866553;

}

function hashFarm__pureZhashes_u715(s_p0) {
  var result_687866573 = 0n;

  var F = {procname: "hashes.hashFarm", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 487;
    F.filename = "hashes.nim";
    if (((s_p0).length <= 16)) {
    F.line = 487;
    result_687866573 = len0_16__pureZhashes_u572(s_p0);
    break BeforeRet;
    }
    
    if (((s_p0).length <= 32)) {
    F.line = 488;
    result_687866573 = len17_32__pureZhashes_u624(s_p0);
    break BeforeRet;
    }
    
    if (((s_p0).length <= 64)) {
    F.line = 489;
    result_687866573 = len33_64__pureZhashes_u638(s_p0);
    break BeforeRet;
    }
    
    F.line = 492;
    var o_687866584 = 0;
    F.line = 493;
    var x_687866585 = 81n;
    F.line = 494;
    var y_687866586 = 2480279821605975764n;
    F.line = 495;
    var z_687866587 = BigInt.asUintN(64, (shiftMix__pureZhashes_u538(BigInt.asUintN(64, (BigInt.asUintN(64, (y_687866586 * 11160318154034397263n)) + 113n))) * 11160318154034397263n));
    F.line = 496;
    var v_687866593 = nimCopy(null, {Field0: 0n, Field1: 0n}, NTI687866231);
    F.line = 496;
    var w_687866598 = nimCopy(null, {Field0: 0n, Field1: 0n}, NTI687866231);
    F.line = 497;
    x_687866585 = BigInt.asUintN(64, (BigInt.asUintN(64, (x_687866585 * 11160318154034397263n)) + load8__pureZhashes_u528(s_p0, 0)));
    F.line = 498;
    var eos_687866602 = mulInt(divInt(subInt((s_p0).length, 1), 64), 64);
    F.line = 499;
    var last64_687866606 = subInt(addInt(eos_687866602, (subInt((s_p0).length, 1) & 63)), 63);
    Label1: {
      F.line = 500;
        Label2: while (true) {
        if (!true) break Label2;
          F.line = 501;
          x_687866585 = BigInt.asUintN(64, (rotR__pureZhashes_u545(BigInt.asUintN(64, (BigInt.asUintN(64, (BigInt.asUintN(64, (x_687866585 + y_687866586)) + v_687866593["Field0"])) + load8__pureZhashes_u528(s_p0, addInt(o_687866584, 8)))), 37) * 13011662864482103923n));
          F.line = 502;
          y_687866586 = BigInt.asUintN(64, (rotR__pureZhashes_u545(BigInt.asUintN(64, (BigInt.asUintN(64, (y_687866586 + v_687866593["Field1"])) + load8__pureZhashes_u528(s_p0, addInt(o_687866584, 48)))), 42) * 13011662864482103923n));
          F.line = 503;
          x_687866585 = (x_687866585 ^ w_687866598["Field1"]);
          F.line = 504;
          y_687866586 = BigInt.asUintN(64, y_687866586 + BigInt(BigInt.asUintN(64, (v_687866593["Field0"] + load8__pureZhashes_u528(s_p0, addInt(o_687866584, 40))))));
          F.line = 505;
          z_687866587 = BigInt.asUintN(64, (rotR__pureZhashes_u545(BigInt.asUintN(64, (z_687866587 + w_687866598["Field0"])), 33) * 13011662864482103923n));
          F.line = 506;
          v_687866593 = nimCopy(v_687866593, weakLen32withSeeds__pureZhashes_u692(s_p0, addInt(o_687866584, 0), BigInt.asUintN(64, (v_687866593["Field1"] * 13011662864482103923n)), BigInt.asUintN(64, (x_687866585 + w_687866598["Field0"]))), NTI687866231);
          F.line = 507;
          w_687866598 = nimCopy(w_687866598, weakLen32withSeeds__pureZhashes_u692(s_p0, addInt(o_687866584, 32), BigInt.asUintN(64, (z_687866587 + w_687866598["Field1"])), BigInt.asUintN(64, (y_687866586 + load8__pureZhashes_u528(s_p0, addInt(o_687866584, 16))))), NTI687866231);
          F.line = 508;
          F.line = 508;
          var HEX3Atmp_536873159 = z_687866587;
          F.line = 508;
          z_687866587 = x_687866585;
          F.line = 508;
          x_687866585 = HEX3Atmp_536873159;
          F.line = 509;
          o_687866584 = addInt(o_687866584, 64);
          if ((o_687866584 == eos_687866602)) {
          F.line = 510;
          break Label1;
          }
          
        }
    };
    F.line = 511;
    var mul_687866624 = BigInt.asUintN(64, (13011662864482103923n + BigInt.asUintN(64, (z_687866587 & 255n) << BigInt(1))));
    F.line = 512;
    o_687866584 = last64_687866606;
    F.line = 513;
    w_687866598["Field0"] = BigInt.asUintN(64, w_687866598["Field0"] + BigInt((BigInt.asUintN(64, (lenU__pureZhashes_u532(s_p0) - 1n)) & 63n)));
    F.line = 514;
    v_687866593["Field0"] = BigInt.asUintN(64, v_687866593["Field0"] + BigInt(w_687866598["Field0"]));
    F.line = 515;
    w_687866598["Field0"] = BigInt.asUintN(64, w_687866598["Field0"] + BigInt(v_687866593["Field0"]));
    F.line = 516;
    x_687866585 = BigInt.asUintN(64, (rotR__pureZhashes_u545(BigInt.asUintN(64, (BigInt.asUintN(64, (BigInt.asUintN(64, (x_687866585 + y_687866586)) + v_687866593["Field0"])) + load8__pureZhashes_u528(s_p0, addInt(o_687866584, 8)))), 37) * mul_687866624));
    F.line = 517;
    y_687866586 = BigInt.asUintN(64, (rotR__pureZhashes_u545(BigInt.asUintN(64, (BigInt.asUintN(64, (y_687866586 + v_687866593["Field1"])) + load8__pureZhashes_u528(s_p0, addInt(o_687866584, 48)))), 42) * mul_687866624));
    F.line = 518;
    x_687866585 = (x_687866585 ^ BigInt.asUintN(64, (w_687866598["Field1"] * 9n)));
    F.line = 519;
    y_687866586 = BigInt.asUintN(64, y_687866586 + BigInt(BigInt.asUintN(64, (BigInt.asUintN(64, (v_687866593["Field0"] * 9n)) + load8__pureZhashes_u528(s_p0, addInt(o_687866584, 40))))));
    F.line = 520;
    z_687866587 = BigInt.asUintN(64, (rotR__pureZhashes_u545(BigInt.asUintN(64, (z_687866587 + w_687866598["Field0"])), 33) * mul_687866624));
    F.line = 521;
    v_687866593 = nimCopy(v_687866593, weakLen32withSeeds__pureZhashes_u692(s_p0, addInt(o_687866584, 0), BigInt.asUintN(64, (v_687866593["Field1"] * mul_687866624)), BigInt.asUintN(64, (x_687866585 + w_687866598["Field0"]))), NTI687866231);
    F.line = 522;
    w_687866598 = nimCopy(w_687866598, weakLen32withSeeds__pureZhashes_u692(s_p0, addInt(o_687866584, 32), BigInt.asUintN(64, (z_687866587 + w_687866598["Field1"])), BigInt.asUintN(64, (y_687866586 + load8__pureZhashes_u528(s_p0, addInt(o_687866584, 16))))), NTI687866231);
    F.line = 523;
    F.line = 523;
    var HEX3Atmp_536873160 = z_687866587;
    F.line = 523;
    z_687866587 = x_687866585;
    F.line = 523;
    x_687866585 = HEX3Atmp_536873160;
    result_687866573 = len16__pureZhashes_u557(BigInt.asUintN(64, (BigInt.asUintN(64, (len16__pureZhashes_u557(v_687866593["Field0"], w_687866598["Field0"], mul_687866624) + BigInt.asUintN(64, (shiftMix__pureZhashes_u538(y_687866586) * 14097894508562428199n)))) + z_687866587)), BigInt.asUintN(64, (len16__pureZhashes_u557(v_687866593["Field1"], w_687866598["Field1"], mul_687866624) + x_687866585)), mul_687866624);
  };
  framePtr = F.prev;

  return result_687866573;

}

function hash__pureZhashes_u791(x_p0) {
  var result_687866649 = 0;

  var F = {procname: "hashes.hash", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 542;
    F.filename = "hashes.nim";
    result_687866649 = Number(BigInt.asIntN(32, hashFarm__pureZhashes_u715((x_p0.slice(0, (x_p0).length - 1 + 1)))));
  framePtr = F.prev;

  return result_687866649;

}

function isFilled__pureZcollectionsZtables_u31(hcode_p0) {
  var result_671088673 = false;

  var F = {procname: "tables.isFilled", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    F.line = 27;
    F.filename = "hashcommon.nim";
    result_671088673 = !((hcode_p0 == 0));
  framePtr = F.prev;

  return result_671088673;

}

function nextTry__pureZcollectionsZtables_u34(h_p0, maxHash_p1) {
  var result_671088677 = 0;

  var F = {procname: "tables.nextTry", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "hashcommon.nim";
    result_671088677 = (addInt(h_p0, 1) & maxHash_p1);
  framePtr = F.prev;

  return result_671088677;

}

function rawGet__lexer_u204(t_p0, key_p1, hc_p2, hc_p2_Idx) {
  var result_536871122 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 59;
    F.filename = "hashcommon.nim";
    hc_p2[hc_p2_Idx] = hash__pureZhashes_u791(key_p1);
    if ((hc_p2[hc_p2_Idx] == 0)) {
    F.line = 64;
    hc_p2[hc_p2_Idx] = 314159265;
    }
    
    if (((t_p0.data).length == 0)) {
    F.line = 43;
    result_536871122 = (-1);
    break BeforeRet;
    }
    
    F.line = 44;
    var h_536871172 = (hc_p2[hc_p2_Idx] & (t_p0.data).length - 1);
    Label1: {
      F.line = 45;
        Label2: while (true) {
        if (!isFilled__pureZcollectionsZtables_u31(t_p0.data[chckIndx(h_536871172, 0, (t_p0.data).length - 1)].Field0)) break Label2;
          if (((t_p0.data[chckIndx(h_536871172, 0, (t_p0.data).length - 1)].Field0 == hc_p2[hc_p2_Idx]) && eqStrings(t_p0.data[chckIndx(h_536871172, 0, (t_p0.data).length - 1)].Field1, key_p1))) {
          F.line = 51;
          result_536871122 = h_536871172;
          break BeforeRet;
          }
          
          F.line = 52;
          h_536871172 = nextTry__pureZcollectionsZtables_u34(h_536871172, (t_p0.data).length - 1);
        }
    };
    F.line = 53;
    result_536871122 = subInt((-1), h_536871172);
  };
  framePtr = F.prev;

  return result_536871122;

}

function hasKey__lexer_u1559(t_p0, key_p1) {
  var result_536872476 = false;

  var F = {procname: "hasKey.hasKey", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 370;
    F.filename = "tables.nim";
    var hc_536872477 = [0];
    F.line = 371;
    result_536872476 = (0 <= rawGet__lexer_u204(t_p0, key_p1, hc_536872477, 0));
  framePtr = F.prev;

  return result_536872476;

}

function raiseKeyError__lexer_u1684(key_p0) {
  var F = {procname: "raiseKeyError.raiseKeyError", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 232;
    F.filename = "tables.nim";
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32]).concat(key_p0), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
  framePtr = F.prev;

  
}

function HEX5BHEX5D__lexer_u1621(t_p0, key_p1) {
  var result_536872538 = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/data/data/com.termux/files/usr/lib/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 240;
    F.filename = "tables.nim";
    var hcHEX60gensym20_536872539 = [0];
    F.line = 241;
    var indexHEX60gensym20_536872546 = rawGet__lexer_u204(t_p0, key_p1, hcHEX60gensym20_536872539, 0);
    if ((0 <= indexHEX60gensym20_536872546)) {
    F.line = 242;
    result_536872538 = t_p0.data[chckIndx(indexHEX60gensym20_536872546, 0, (t_p0.data).length - 1)]["Field2"];
    }
    else {
      F.line = 244;
    raiseKeyError__lexer_u1684(key_p1);
    }
    
  framePtr = F.prev;

  return result_536872538;

}

function identifier__lexer_u1516() {
          var Temporary3;
          var Temporary4;
    var Temporary5;
      var Temporary6;

  var F = {procname: "lexer.identifier", prev: framePtr, filename: "/data/data/com.termux/files/home/uki/code/compiler/lexer.nim", line: 0};
  framePtr = F;
    F.line = 71;
    F.filename = "lexer.nim";
    var accumulate_536872429 = [];
    Label1: {
      F.line = 72;
        Label2: while (true) {
          Temporary4 = isAtEnd__lexer_u1475.bind(this); Temporary4.ClP_0 = isAtEnd__lexer_u1475; Temporary4.ClE_0 = this;
          if (!!(Temporary4())) Temporary3 = false; else {            Temporary3 = isAlphaNumeric__lexer_u1491(this.input0[chckIndx(this.index1, 0, (this.input0).length - 1)]);          }        if (!Temporary3) break Label2;
          F.line = 73;
          addChar(accumulate_536872429, this.input0[chckIndx(this.index1, 0, (this.input0).length - 1)]);;
          F.line = 74;
          this.index1 = addInt(this.index1, 1);
        }
    };
    if (hasKey__lexer_u1559(keywords_536872289, accumulate_536872429)) {
    F.line = 78;
    Temporary5 = addToken__lexer_u1378.bind(this); Temporary5.ClP_0 = addToken__lexer_u1378; Temporary5.ClE_0 = this;
    Temporary5(HEX5BHEX5D__lexer_u1621(keywords_536872289, accumulate_536872429), accumulate_536872429);
    }
    else {
      F.line = 80;
      Temporary6 = addToken__lexer_u1378.bind(this); Temporary6.ClP_0 = addToken__lexer_u1378; Temporary6.ClE_0 = this;
    Temporary6(4, accumulate_536872429);
    }
    
  framePtr = F.prev;

  
}

function lexer__lexer_u3(input_p0) {
          var Temporary3;
            var Temporary4;
            var Temporary5;
            var Temporary6;
            var Temporary7;
            var Temporary8;
            var Temporary9;
            var Temporary10;
            var Temporary11;
            var Temporary12;
            var Temporary13;
              var Temporary14;
            var Temporary15;
              var Temporary16;
            var Temporary17;
            var Temporary18;
            var Temporary19;
            var Temporary20;
            var Temporary21;
            var Temporary22;
            var Temporary23;
            var Temporary24;
            var Temporary25;
                  var Temporary28;
                  var Temporary29;
            var Temporary30;
              var Temporary31;
            var Temporary32;
            var Temporary33;
            var Temporary34;
            var Temporary35;
            var Temporary36;
              var Temporary37;
            var Temporary38;
            var Temporary39;
            var Temporary40;
              var Temporary41;
          var Temporary44;
          var Temporary45;
    var Temporary46;

  var result_536870917 = null;

  var F = {procname: "lexer.lexer", prev: framePtr, filename: "/data/data/com.termux/files/home/uki/code/compiler/lexer.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 12;
    F.filename = "lexer.nim";
    var HEX3Aenv_536873043 = null;
    F.line = 12;
    HEX3Aenv_536873043 = {m_type: NTI536872190, input0: [], index1: 0, tokens2: [], line3: 0, diagnostics4: [], indentStack5: []};
    F.line = 11;
    HEX3Aenv_536873043.input0 = nimCopy(null, input_p0, NTI33554449);
    HEX3Aenv_536873043.index1 = 0;
    HEX3Aenv_536873043.tokens2 = [];
    HEX3Aenv_536873043.diagnostics4 = [];
    F.line = 15;
    HEX3Aenv_536873043.line3 = 1;
    F.line = 16;
    HEX3Aenv_536873043.indentStack5 = nimCopy(null, [0], NTI536870924);
    Label1: {
      F.line = 129;
        Label2: while (true) {
          Temporary3 = isAtEnd__lexer_u1475.bind(HEX3Aenv_536873043); Temporary3.ClP_0 = isAtEnd__lexer_u1475; Temporary3.ClE_0 = HEX3Aenv_536873043;
        if (!!(Temporary3())) break Label2;
          F.line = 130;
          var character_536872743 = HEX3Aenv_536873043.input0[chckIndx(HEX3Aenv_536873043.index1, 0, (HEX3Aenv_536873043.input0).length - 1)];
          F.line = 132;
          switch (character_536872743) {
          case 40:
            F.line = 134;
            Temporary4 = addToken__lexer_u1378.bind(HEX3Aenv_536873043); Temporary4.ClP_0 = addToken__lexer_u1378; Temporary4.ClE_0 = HEX3Aenv_536873043;
            Temporary4(5, nimCharToStr(character_536872743));
            F.line = 135;
            HEX3Aenv_536873043.index1 = addInt(HEX3Aenv_536873043.index1, 1);
            break;
          case 41:
            F.line = 137;
            Temporary5 = addToken__lexer_u1378.bind(HEX3Aenv_536873043); Temporary5.ClP_0 = addToken__lexer_u1378; Temporary5.ClE_0 = HEX3Aenv_536873043;
            Temporary5(6, nimCharToStr(character_536872743));
            F.line = 138;
            HEX3Aenv_536873043.index1 = addInt(HEX3Aenv_536873043.index1, 1);
            break;
          case 123:
            F.line = 140;
            Temporary6 = addToken__lexer_u1378.bind(HEX3Aenv_536873043); Temporary6.ClP_0 = addToken__lexer_u1378; Temporary6.ClE_0 = HEX3Aenv_536873043;
            Temporary6(7, nimCharToStr(character_536872743));
            F.line = 141;
            HEX3Aenv_536873043.index1 = addInt(HEX3Aenv_536873043.index1, 1);
            break;
          case 125:
            F.line = 143;
            Temporary7 = addToken__lexer_u1378.bind(HEX3Aenv_536873043); Temporary7.ClP_0 = addToken__lexer_u1378; Temporary7.ClE_0 = HEX3Aenv_536873043;
            Temporary7(8, nimCharToStr(character_536872743));
            F.line = 144;
            HEX3Aenv_536873043.index1 = addInt(HEX3Aenv_536873043.index1, 1);
            break;
          case 91:
            F.line = 146;
            Temporary8 = addToken__lexer_u1378.bind(HEX3Aenv_536873043); Temporary8.ClP_0 = addToken__lexer_u1378; Temporary8.ClE_0 = HEX3Aenv_536873043;
            Temporary8(9, nimCharToStr(character_536872743));
            F.line = 147;
            HEX3Aenv_536873043.index1 = addInt(HEX3Aenv_536873043.index1, 1);
            break;
          case 93:
            F.line = 149;
            Temporary9 = addToken__lexer_u1378.bind(HEX3Aenv_536873043); Temporary9.ClP_0 = addToken__lexer_u1378; Temporary9.ClE_0 = HEX3Aenv_536873043;
            Temporary9(10, nimCharToStr(character_536872743));
            F.line = 150;
            HEX3Aenv_536873043.index1 = addInt(HEX3Aenv_536873043.index1, 1);
            break;
          case 44:
            F.line = 152;
            Temporary10 = addToken__lexer_u1378.bind(HEX3Aenv_536873043); Temporary10.ClP_0 = addToken__lexer_u1378; Temporary10.ClE_0 = HEX3Aenv_536873043;
            Temporary10(12, nimCharToStr(character_536872743));
            F.line = 153;
            HEX3Aenv_536873043.index1 = addInt(HEX3Aenv_536873043.index1, 1);
            break;
          case 46:
            F.line = 155;
            Temporary11 = addToken__lexer_u1378.bind(HEX3Aenv_536873043); Temporary11.ClP_0 = addToken__lexer_u1378; Temporary11.ClE_0 = HEX3Aenv_536873043;
            Temporary11(11, nimCharToStr(character_536872743));
            F.line = 156;
            HEX3Aenv_536873043.index1 = addInt(HEX3Aenv_536873043.index1, 1);
            break;
          case 58:
            F.line = 158;
            Temporary12 = addToken__lexer_u1378.bind(HEX3Aenv_536873043); Temporary12.ClP_0 = addToken__lexer_u1378; Temporary12.ClE_0 = HEX3Aenv_536873043;
            Temporary12(16, nimCharToStr(character_536872743));
            F.line = 159;
            HEX3Aenv_536873043.index1 = addInt(HEX3Aenv_536873043.index1, 1);
            break;
          case 45:
            if (((addInt(HEX3Aenv_536873043.index1, 1) < (HEX3Aenv_536873043.input0).length) && isDigit__lexer_u1477(HEX3Aenv_536873043.input0[chckIndx(addInt(HEX3Aenv_536873043.index1, 1), 0, (HEX3Aenv_536873043.input0).length - 1)]))) {
            F.line = 162;
            HEX3Aenv_536873043.index1 = addInt(HEX3Aenv_536873043.index1, 1);
            F.line = 163;
            Temporary13 = number__lexer_u1724.bind(HEX3Aenv_536873043); Temporary13.ClP_0 = number__lexer_u1724; Temporary13.ClE_0 = HEX3Aenv_536873043;
            Temporary13(true);
            }
            else {
              F.line = 165;
              Temporary14 = addToken__lexer_u1378.bind(HEX3Aenv_536873043); Temporary14.ClP_0 = addToken__lexer_u1378; Temporary14.ClE_0 = HEX3Aenv_536873043;
              Temporary14(24, nimCharToStr(character_536872743));
              F.line = 166;
              HEX3Aenv_536873043.index1 = addInt(HEX3Aenv_536873043.index1, 1);
            }
            
            break;
          case 43:
            if (((addInt(HEX3Aenv_536873043.index1, 1) < (HEX3Aenv_536873043.input0).length) && isDigit__lexer_u1477(HEX3Aenv_536873043.input0[chckIndx(addInt(HEX3Aenv_536873043.index1, 1), 0, (HEX3Aenv_536873043.input0).length - 1)]))) {
            F.line = 169;
            HEX3Aenv_536873043.index1 = addInt(HEX3Aenv_536873043.index1, 1);
            F.line = 170;
            Temporary15 = number__lexer_u1724.bind(HEX3Aenv_536873043); Temporary15.ClP_0 = number__lexer_u1724; Temporary15.ClE_0 = HEX3Aenv_536873043;
            Temporary15(false);
            }
            else {
              F.line = 172;
              Temporary16 = addToken__lexer_u1378.bind(HEX3Aenv_536873043); Temporary16.ClP_0 = addToken__lexer_u1378; Temporary16.ClE_0 = HEX3Aenv_536873043;
              Temporary16(23, nimCharToStr(character_536872743));
              F.line = 173;
              HEX3Aenv_536873043.index1 = addInt(HEX3Aenv_536873043.index1, 1);
            }
            
            break;
          case 42:
            F.line = 175;
            Temporary17 = addToken__lexer_u1378.bind(HEX3Aenv_536873043); Temporary17.ClP_0 = addToken__lexer_u1378; Temporary17.ClE_0 = HEX3Aenv_536873043;
            Temporary17(25, nimCharToStr(character_536872743));
            F.line = 176;
            HEX3Aenv_536873043.index1 = addInt(HEX3Aenv_536873043.index1, 1);
            break;
          case 47:
            F.line = 178;
            Temporary18 = addToken__lexer_u1378.bind(HEX3Aenv_536873043); Temporary18.ClP_0 = addToken__lexer_u1378; Temporary18.ClE_0 = HEX3Aenv_536873043;
            Temporary18(26, nimCharToStr(character_536872743));
            F.line = 179;
            HEX3Aenv_536873043.index1 = addInt(HEX3Aenv_536873043.index1, 1);
            break;
          case 36:
            F.line = 181;
            Temporary19 = addToken__lexer_u1378.bind(HEX3Aenv_536873043); Temporary19.ClP_0 = addToken__lexer_u1378; Temporary19.ClE_0 = HEX3Aenv_536873043;
            Temporary19(33, nimCharToStr(character_536872743));
            F.line = 182;
            HEX3Aenv_536873043.index1 = addInt(HEX3Aenv_536873043.index1, 1);
            break;
          case 63:
            F.line = 184;
            Temporary20 = addToken__lexer_u1378.bind(HEX3Aenv_536873043); Temporary20.ClP_0 = addToken__lexer_u1378; Temporary20.ClE_0 = HEX3Aenv_536873043;
            Temporary20(15, nimCharToStr(character_536872743));
            F.line = 185;
            HEX3Aenv_536873043.index1 = addInt(HEX3Aenv_536873043.index1, 1);
            break;
          case 38:
            F.line = 187;
            Temporary21 = addToken__lexer_u1378.bind(HEX3Aenv_536873043); Temporary21.ClP_0 = addToken__lexer_u1378; Temporary21.ClE_0 = HEX3Aenv_536873043;
            Temporary21(14, nimCharToStr(character_536872743));
            F.line = 188;
            HEX3Aenv_536873043.index1 = addInt(HEX3Aenv_536873043.index1, 1);
            break;
          case 61:
            F.line = 190;
            Temporary22 = addToken__lexer_u1378.bind(HEX3Aenv_536873043); Temporary22.ClP_0 = addToken__lexer_u1378; Temporary22.ClE_0 = HEX3Aenv_536873043;
            Temporary22(17, nimCharToStr(character_536872743));
            F.line = 191;
            HEX3Aenv_536873043.index1 = addInt(HEX3Aenv_536873043.index1, 1);
            break;
          case 62:
            F.line = 193;
            Temporary23 = addToken__lexer_u1378.bind(HEX3Aenv_536873043); Temporary23.ClP_0 = addToken__lexer_u1378; Temporary23.ClE_0 = HEX3Aenv_536873043;
            Temporary23(19, nimCharToStr(character_536872743));
            F.line = 194;
            HEX3Aenv_536873043.index1 = addInt(HEX3Aenv_536873043.index1, 1);
            break;
          case 60:
            F.line = 196;
            Temporary24 = addToken__lexer_u1378.bind(HEX3Aenv_536873043); Temporary24.ClP_0 = addToken__lexer_u1378; Temporary24.ClE_0 = HEX3Aenv_536873043;
            Temporary24(18, nimCharToStr(character_536872743));
            F.line = 197;
            HEX3Aenv_536873043.index1 = addInt(HEX3Aenv_536873043.index1, 1);
            break;
          case 124:
            F.line = 199;
            Temporary25 = addToken__lexer_u1378.bind(HEX3Aenv_536873043); Temporary25.ClP_0 = addToken__lexer_u1378; Temporary25.ClE_0 = HEX3Aenv_536873043;
            Temporary25(27, nimCharToStr(character_536872743));
            F.line = 200;
            HEX3Aenv_536873043.index1 = addInt(HEX3Aenv_536873043.index1, 1);
            break;
          case 35:
            Label26: {
              F.line = 203;
                Label27: while (true) {
                  Temporary29 = isAtEnd__lexer_u1475.bind(HEX3Aenv_536873043); Temporary29.ClP_0 = isAtEnd__lexer_u1475; Temporary29.ClE_0 = HEX3Aenv_536873043;
                  if (!!(Temporary29())) Temporary28 = false; else {                    Temporary28 = !((HEX3Aenv_536873043.input0[chckIndx(HEX3Aenv_536873043.index1, 0, (HEX3Aenv_536873043.input0).length - 1)] == 10));                  }                if (!Temporary28) break Label27;
                  F.line = 204;
                  HEX3Aenv_536873043.index1 = addInt(HEX3Aenv_536873043.index1, 1);
                }
            };
            break;
          case 95:
            if (((addInt(HEX3Aenv_536873043.index1, 1) < (HEX3Aenv_536873043.input0).length) && (HEX3Aenv_536873043.input0[chckIndx(addInt(HEX3Aenv_536873043.index1, 1), 0, (HEX3Aenv_536873043.input0).length - 1)] == 60))) {
            F.line = 207;
            HEX3Aenv_536873043.index1 = addInt(HEX3Aenv_536873043.index1, 2);
            F.line = 208;
            Temporary30 = addToken__lexer_u1378.bind(HEX3Aenv_536873043); Temporary30.ClP_0 = addToken__lexer_u1378; Temporary30.ClE_0 = HEX3Aenv_536873043;
            Temporary30(31, [95,60]);
            }
            else {
              F.line = 210;
              Temporary31 = addToken__lexer_u1378.bind(HEX3Aenv_536873043); Temporary31.ClP_0 = addToken__lexer_u1378; Temporary31.ClE_0 = HEX3Aenv_536873043;
              Temporary31(30, nimCharToStr(character_536872743));
              F.line = 211;
              HEX3Aenv_536873043.index1 = addInt(HEX3Aenv_536873043.index1, 1);
            }
            
            break;
          case 10:
            F.line = 213;
            HEX3Aenv_536873043.line3 = addInt(HEX3Aenv_536873043.line3, 1);
            F.line = 214;
            HEX3Aenv_536873043.index1 = addInt(HEX3Aenv_536873043.index1, 1);
            F.line = 215;
            Temporary32 = addToken__lexer_u1378.bind(HEX3Aenv_536873043); Temporary32.ClP_0 = addToken__lexer_u1378; Temporary32.ClE_0 = HEX3Aenv_536873043;
            Temporary32(32, []);
            F.line = 216;
            Temporary33 = handleIndentation__lexer_u1732.bind(HEX3Aenv_536873043); Temporary33.ClP_0 = handleIndentation__lexer_u1732; Temporary33.ClE_0 = HEX3Aenv_536873043;
            Temporary33();
            break;
          case 32:
          case 92:
            F.line = 218;
            HEX3Aenv_536873043.index1 = addInt(HEX3Aenv_536873043.index1, 1);
            break;
          case 33:
            if ((addInt(HEX3Aenv_536873043.index1, 1) < (HEX3Aenv_536873043.input0).length)) {
            if ((HEX3Aenv_536873043.input0[chckIndx(addInt(HEX3Aenv_536873043.index1, 1), 0, (HEX3Aenv_536873043.input0).length - 1)] == 61)) {
            F.line = 222;
            Temporary34 = addToken__lexer_u1378.bind(HEX3Aenv_536873043); Temporary34.ClP_0 = addToken__lexer_u1378; Temporary34.ClE_0 = HEX3Aenv_536873043;
            Temporary34(20, [33,61]);
            F.line = 223;
            HEX3Aenv_536873043.index1 = addInt(HEX3Aenv_536873043.index1, 2);
            }
            else {
            if ((HEX3Aenv_536873043.input0[chckIndx(addInt(HEX3Aenv_536873043.index1, 1), 0, (HEX3Aenv_536873043.input0).length - 1)] == 62)) {
            F.line = 225;
            Temporary35 = addToken__lexer_u1378.bind(HEX3Aenv_536873043); Temporary35.ClP_0 = addToken__lexer_u1378; Temporary35.ClE_0 = HEX3Aenv_536873043;
            Temporary35(22, [33,62]);
            F.line = 226;
            HEX3Aenv_536873043.index1 = addInt(HEX3Aenv_536873043.index1, 2);
            }
            else {
            if ((HEX3Aenv_536873043.input0[chckIndx(addInt(HEX3Aenv_536873043.index1, 1), 0, (HEX3Aenv_536873043.input0).length - 1)] == 60)) {
            F.line = 228;
            Temporary36 = addToken__lexer_u1378.bind(HEX3Aenv_536873043); Temporary36.ClP_0 = addToken__lexer_u1378; Temporary36.ClE_0 = HEX3Aenv_536873043;
            Temporary36(21, [33,60]);
            F.line = 229;
            HEX3Aenv_536873043.index1 = addInt(HEX3Aenv_536873043.index1, 2);
            }
            }}
            }
            else {
              F.line = 231;
              Temporary37 = addToken__lexer_u1378.bind(HEX3Aenv_536873043); Temporary37.ClP_0 = addToken__lexer_u1378; Temporary37.ClE_0 = HEX3Aenv_536873043;
              Temporary37(13, nimCharToStr(character_536872743));
              F.line = 232;
              HEX3Aenv_536873043.index1 = addInt(HEX3Aenv_536873043.index1, 1);
            }
            
            break;
          case 34:
            F.line = 234;
            Temporary38 = string__lexer_u1494.bind(HEX3Aenv_536873043); Temporary38.ClP_0 = string__lexer_u1494; Temporary38.ClE_0 = HEX3Aenv_536873043;
            Temporary38();
            break;
          default: 
            if (isDigit__lexer_u1477(character_536872743)) {
            F.line = 237;
            Temporary39 = number__lexer_u1724.bind(HEX3Aenv_536873043); Temporary39.ClP_0 = number__lexer_u1724; Temporary39.ClE_0 = HEX3Aenv_536873043;
            Temporary39(false);
            }
            else {
            if (isAlphabet__lexer_u1484(character_536872743)) {
            F.line = 239;
            Temporary40 = identifier__lexer_u1516.bind(HEX3Aenv_536873043); Temporary40.ClP_0 = identifier__lexer_u1516; Temporary40.ClE_0 = HEX3Aenv_536873043;
            Temporary40();
            }
            else {
              F.line = 241;
              Temporary41 = addDiagnostic__lexer_u1419.bind(HEX3Aenv_536873043); Temporary41.ClP_0 = addDiagnostic__lexer_u1419; Temporary41.ClE_0 = HEX3Aenv_536873043;
              Temporary41(([85,110,101,120,112,101,99,116,101,100,32,99,104,97,114,97,99,116,101,114,58,32,96]).concat(nimCharToStr(character_536872743),[96]));
              F.line = 242;
              HEX3Aenv_536873043.index1 = addInt(HEX3Aenv_536873043.index1, 1);
            }
            }
            break;
          }
        }
    };
    Label42: {
      F.line = 244;
        Label43: while (true) {
        if (!(1 < (HEX3Aenv_536873043.indentStack5).length)) break Label43;
          F.line = 245;
          if (HEX3Aenv_536873043.indentStack5.length < (Temporary44 = chckRange(subInt((HEX3Aenv_536873043.indentStack5).length, 1), 0, 2147483647), Temporary44)) { for (var i = HEX3Aenv_536873043.indentStack5.length ; i < Temporary44 ; ++i) HEX3Aenv_536873043.indentStack5.push(0); }
               else { HEX3Aenv_536873043.indentStack5.length = Temporary44; };
          F.line = 246;
          Temporary45 = addToken__lexer_u1378.bind(HEX3Aenv_536873043); Temporary45.ClP_0 = addToken__lexer_u1378; Temporary45.ClE_0 = HEX3Aenv_536873043;
          Temporary45(45, []);
        }
    };
    F.line = 248;
    Temporary46 = addToken__lexer_u1378.bind(HEX3Aenv_536873043); Temporary46.ClP_0 = addToken__lexer_u1378; Temporary46.ClE_0 = HEX3Aenv_536873043;
    Temporary46(1, []);
    F.line = 250;
    result_536870917 = {diagnostics: nimCopy(null, HEX3Aenv_536873043.diagnostics4, NTI905969672), input: nimCopy(null, HEX3Aenv_536873043.input0, NTI33554449), tokens: nimCopy(null, HEX3Aenv_536873043.tokens2, NTI905969670)};
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_536870917;

}
var F = {procname: "module lexer", prev: framePtr, filename: "/data/data/com.termux/files/home/uki/code/compiler/lexer.nim", line: 0};
framePtr = F;
F.line = 261;
F.filename = "lexer.nim";
var input_536873001 = [readFile__stdZsyncio_u499([46,47,103,97,114,98,97,103,101,47,105,110,112,117,116,46,117,107,105])];
F.line = 263;
var lexerOutput_536873002 = lexer__lexer_u3(input_536873001[0]);
F.line = 265;
rawEcho(nimBoolToStr(eqStrings(lexerOutput_536873002.tokens[chckIndx(0, 0, (lexerOutput_536873002.tokens).length - 1)].lexeme, [105,115,45,112,114,105,109,101])));
F.line = 273;
var jsInput_536873007 = readFile__stdZsyncio_u499([103,97,114,98,97,103,101,47,105,110,112,117,116,46,117,107,105]);
framePtr = F.prev;
var F = {procname: "module lexer", prev: framePtr, filename: "/data/data/com.termux/files/home/uki/code/compiler/lexer.nim", line: 0};
framePtr = F;
framePtr = F.prev;
